* as fs from node:fs/promises
* as path from node:path
{ type SlashCommandBuilder, Collection } from discord.js
type { CommandHandler } from ./types.civet

export class CommandRouter
  private routes: Record<string, string> = {}

  private loadRoutes()
    commandsPath := 'src/commands'
    files := await fs.readdir commandsPath
    for file of files
      unless @isInternalFile file
        name := file.replace '.civet', ''
        filePath := path.join 'commands', file
        @routes[name] = filePath

  loadCommands()
    await @loadRoutes()
    applicationCommands: SlashCommandBuilder[] := []
    commands := new Collection<string, CommandHandler>
    commandsRoutes := Object.entries @routes
    for [fileName, filePath] of commandsRoutes
      if @isInternalFile filePath
        continue
      module := await import filePath
      handler := module.default as CommandHandler
      unless handler
        console.warn `No default export found in ${filePath}`
        continue
      name := fileName.replace '/', ''
      commands.set name, handler
      if command := module.command
        applicationCommands.push command
      else
        console.warn `No command found in ${filePath}, this command will not be registered`
    { commands, applicationCommands }

  private isInternalFile(filePath: string)
    filePath.startsWith '/_'
