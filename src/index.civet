import dotenv/config
{ Events, ActivityType } from discord.js
Sentry from @sentry/node

{ TOKEN, SENTRY_DSN } from ./const.civet
{ CommandRouter } from ./router.civet
{ client } from ./client.civet
{ registerApplicationCommands } from ./register.civet
{ voiceMachineActor } from ./machines/voice.civet
{ logger } from ./logger.civet

Sentry.init {
  dsn: SENTRY_DSN
  // Performance Monitoring
  tracesSampleRate: 1.0 //  Capture 100% of the transactions
  // Set sampling rate for profiling - this is relative to tracesSampleRate
  profilesSampleRate: 1.0
}

router := new CommandRouter
{ commands, applicationCommands } := await router.loadCommands()

await registerApplicationCommands applicationCommands

client
  ||> .on Events.ClientReady, ->
    logger.info 'Scumbot is ready'
    client.user!.setActivity {
      name: 'your mom sunbathing ðŸ˜Ž'
      type: ActivityType.Watching
    }
    return
  ||> .on Events.InteractionCreate, (interaction) ->
    return unless interaction.isChatInputCommand()
    if command := commands.get interaction.commandName
      await command interaction
    else
      await interaction.reply { content: 'Unknown command', +ephemeral }
    return

client.on Events.Error, (error) ->
  voiceMachineActor.send type: 'restart'
  logger.error error

await client.login TOKEN
