{
  type GuildMember
  type Guild
  SlashCommandBuilder
  EmbedBuilder
} from discord.js
{
  getVoiceConnection
  joinVoiceChannel
  VoiceConnectionStatus
} from @discordjs/voice
playdl from play-dl
type { CommandHandler } from ../types.civet
{ audioPlayer } from ../audio-player.civet
{ playAudioResource } from ../helpers/audio-resource.civet
{ audioMachineActor } from ../machines/audio.civet

export command := new SlashCommandBuilder()
  .setName 'play'
  .setDescription 'Plays a YouTube song'
  .addStringOption
    &.setName 'search'
    |> .setDescription 'The search or URL of the song to play'
    |> .setRequired true
  .addIntegerOption
    &.setName 'time'
    |> .setDescription 'The `t` time to start the song at'
    |> .setRequired false

function getVideoInfo(search: string, time: number | null)
  url .= search
  isUrl := /^(https:\/\/)?youtu\.?be/.test url
  unless isUrl
    [video] := await playdl.search search, { limit: 1 }
    url = video.url
  urlInstance := new URL url
  seek := Number(urlInstance.searchParams.get 't') || time
  info := await playdl.video_info url
  { info, seek, url }

function joinGuildMemberVoiceChannel(member: GuildMember | null, guild: Guild | null)
  unless member or guild
    throw new Error 'Member or guild is missing'
  currentConnection := getVoiceConnection guild!.id
  if currentConnection
    if currentConnection.joinConfig.channelId !== member!.voice.channelId
      currentConnection.destroy()
    else
      return
  if voiceChannel := member!.voice.channel
    guildId := voiceChannel.guild.id
    audioMachineActor.send { type: 'room.join', guildId }
    return joinVoiceChannel {
      guildId
      channelId: voiceChannel.id
      adapterCreator: voiceChannel.guild.voiceAdapterCreator
    }

export default play: CommandHandler := (interaction) ->
  search .= interaction.options.getString 'search'
  time := interaction.options.getInteger 'time'
  unless search
    return interaction.reply { content: 'You need to provide a search or URL to play', +ephemeral }
  try
    await interaction.reply '🔍 Searching for the song...'
    { info, seek, url } := await getVideoInfo search, time
    [guild, member] := [interaction.guild, interaction.member]
    connection := joinGuildMemberVoiceChannel member as GuildMember, guild
    unless connection
      return interaction.editReply 'You need to be in a voice channel to play music'
    if subscription := connection.subscribe audioPlayer
      connection.on VoiceConnectionStatus.Ready, -> playAudioResource guild!.id, url, seek
    videoReplyEmbed := new EmbedBuilder()
      .setColor(0x080808)
      .setURL url
    videoDetails := info.video_details
    if videoDetails.title
      videoReplyEmbed.setTitle videoDetails.title!
    if videoDetails.description
      videoReplyEmbed.setDescription videoDetails.description!
    if videoDetails.thumbnails.length > 0
      videoReplyEmbed.setThumbnail videoDetails.thumbnails.0.url
    interaction.editReply {
      content: '🎧 Now playing'
      embeds: [videoReplyEmbed]
    }
  catch (error)
    interaction.editReply content: (error as Error).message
